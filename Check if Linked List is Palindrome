class Solution{
  public:
    //Function to check whether the list is palindrome.
    Node *midPoint(Node *head)
{	
    Node *slow=head;
    Node *fast=head->next;
    while(fast!=NULL && fast->next!=NULL){
        slow=slow->next;
        fast=fast->next->next;
    }
    return slow;
    // Write your code here
}


    bool isPalindrome(Node *head)
    {
        //Your code here
        Node *mid=midPoint(head);
        Node *head2=mid->next;
        mid->next=NULL;
        Node *current=head2;
        Node *prevnode=0;
        Node *nxt;
        while(current!=NULL)
        {
            nxt=current->next;
            current->next=prevnode;
            prevnode=current;
            current=nxt;
        }
        head2=prevnode;
        while(head!=NULL && head2!=NULL)
        {
            if(head->data == head2->data)
            {
                head=head->next;
                head2=head2->next;
            }
            else{
                return false;
            }
        }
        return true;
    }
};
